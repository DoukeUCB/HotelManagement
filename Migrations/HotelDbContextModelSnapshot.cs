// <auto-generated />
using System;
using HotelManagement.Datos.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManagement.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HotelManagement.Models.Cliente", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Razon_Social")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("Usuario_Actualizacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Usuario_Creacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Usuario_Actualizacion_ID");

                    b.HasIndex("Usuario_Creacion_ID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.DetalleReserva", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Salida")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Habitacion_ID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Huesped_ID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Reserva_ID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Habitacion_ID");

                    b.HasIndex("Huesped_ID");

                    b.HasIndex("Reserva_ID");

                    b.ToTable("Detalle_Reserva", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.Habitacion", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<string>("Estado_Habitacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Numero_Habitacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<short>("Piso")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("Tipo_Habitacion_ID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Usuario_Actualizacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Usuario_Creacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Numero_Habitacion")
                        .IsUnique();

                    b.HasIndex("Tipo_Habitacion_ID");

                    b.HasIndex("Usuario_Actualizacion_ID");

                    b.HasIndex("Usuario_Creacion_ID");

                    b.ToTable("Habitacion", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.Huesped", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documento_Identidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Fecha_Nacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Segundo_Apellido")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("Usuario_Actualizacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Usuario_Creacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Usuario_Actualizacion_ID");

                    b.HasIndex("Usuario_Creacion_ID");

                    b.ToTable("Huesped", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.Reserva", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Cliente_ID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.Property<string>("Estado_Reserva")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Monto_Total")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<byte[]>("Usuario_Creacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Cliente_ID");

                    b.HasIndex("Usuario_Creacion_ID");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.TipoHabitacion", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("Capacidad_Maxima")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio_Base")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<byte[]>("Usuario_Actualizacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<byte[]>("Usuario_Creacion_ID")
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.HasIndex("Usuario_Actualizacion_ID");

                    b.HasIndex("Usuario_Creacion_ID");

                    b.ToTable("Tipo_Habitacion", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.Usuario", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Documento_Identidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Segundo_Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Usuario");

                    b.HasKey("ID");

                    b.HasIndex("Usuario1")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Models.Cliente", b =>
                {
                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioActualizacion")
                        .WithMany("ClientesActualizados")
                        .HasForeignKey("Usuario_Actualizacion_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioCreacion")
                        .WithMany("ClientesCreados")
                        .HasForeignKey("Usuario_Creacion_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("UsuarioActualizacion");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("HotelManagement.Models.DetalleReserva", b =>
                {
                    b.HasOne("HotelManagement.Models.Habitacion", "Habitacion")
                        .WithMany("DetalleReservas")
                        .HasForeignKey("Habitacion_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelManagement.Models.Huesped", "Huesped")
                        .WithMany("DetalleReservas")
                        .HasForeignKey("Huesped_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelManagement.Models.Reserva", "Reserva")
                        .WithMany("DetalleReservas")
                        .HasForeignKey("Reserva_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");

                    b.Navigation("Huesped");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("HotelManagement.Models.Habitacion", b =>
                {
                    b.HasOne("HotelManagement.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany("Habitaciones")
                        .HasForeignKey("Tipo_Habitacion_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioActualizacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Actualizacion_ID");

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_ID");

                    b.Navigation("TipoHabitacion");

                    b.Navigation("UsuarioActualizacion");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("HotelManagement.Models.Huesped", b =>
                {
                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioActualizacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Actualizacion_ID");

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_ID");

                    b.Navigation("UsuarioActualizacion");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("HotelManagement.Models.Reserva", b =>
                {
                    b.HasOne("HotelManagement.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("Cliente_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_ID");

                    b.Navigation("Cliente");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("HotelManagement.Models.TipoHabitacion", b =>
                {
                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioActualizacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Actualizacion_ID");

                    b.HasOne("HotelManagement.Models.Usuario", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_ID");

                    b.Navigation("UsuarioActualizacion");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("HotelManagement.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HotelManagement.Models.Habitacion", b =>
                {
                    b.Navigation("DetalleReservas");
                });

            modelBuilder.Entity("HotelManagement.Models.Huesped", b =>
                {
                    b.Navigation("DetalleReservas");
                });

            modelBuilder.Entity("HotelManagement.Models.Reserva", b =>
                {
                    b.Navigation("DetalleReservas");
                });

            modelBuilder.Entity("HotelManagement.Models.TipoHabitacion", b =>
                {
                    b.Navigation("Habitaciones");
                });

            modelBuilder.Entity("HotelManagement.Models.Usuario", b =>
                {
                    b.Navigation("ClientesActualizados");

                    b.Navigation("ClientesCreados");
                });
#pragma warning restore 612, 618
        }
    }
}
